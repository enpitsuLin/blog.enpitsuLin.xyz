---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

type Props = CollectionEntry<'blog'>;

const { slug, data } = Astro.props;
---

<article
  itemscope
  itemtype="http://schema.org/BlogPosting"
  class="flex border-t border-black dark:border-white border-opacity-8 dark:border-opacity-8 flex-col py-4 relative"
>
  <h2
    itemprop="headline"
    class="text-6 hover:underline focus-visible:underline focus:underline"
  >
    <a
      href={`/blog/${slug}`}
      data-umami-event="Article link"
      data-umami-event-slug={slug}
    >
      {data.title}
    </a>
    {
      data.lang && (
        <sup
          aria-label={`extra info: this post write in ${data.lang}`}
          class="inline-block text-neutral-400 px-1 text-xs rounded border border-neutral-300"
        >
          {data.lang}
        </sup>
      )
    }
  </h2>

  <div
    itemprop="articleBody"
    class="my-4 text-opacity-82 text-sm text-neutral-600 dark:text-neutral-300"
  >
    <a href={`/blog/${slug}`}>{data.excerpt}</a>
  </div>

  <div class="flex items-center text-neutral-600 dark:text-neutral-300">
    <span class="text-xs">
      <span>发布于&nbsp;</span>
      <FormattedDate date={new Date(data.date)} itemprop="datePublished" />
    </span>
    <div
      class="space-x-2 flex items-center ml-4"
      aria-label="Tags for this post"
    >
      {
        data.tags?.map((tag) => {
          return (
            <a
              title={tag}
              href={`/tags/${tag}`}
              class="inline-block text-xs motion-safe:(transition-colors duration-200 ease-in) hover:underline"
            >
              #{tag}
            </a>
          );
        })
      }
    </div>
  </div>
</article>
